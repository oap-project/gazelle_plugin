-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 51


-- !query
WITH q1(x,y) AS (SELECT 1,2)
SELECT * FROM q1, q1 AS q2
-- !query schema
struct<x:int,y:int,x:int,y:int>
-- !query output
1	2	1	2


-- !query
SELECT count(*) FROM (
  WITH q1(x) AS (SELECT rand() FROM (SELECT EXPLODE(SEQUENCE(1, 5))))
    SELECT * FROM q1
  UNION
    SELECT * FROM q1
) ss
-- !query schema
struct<count(1):bigint>
-- !query output
10


-- !query
CREATE TABLE department (
	id INTEGER,  -- department ID
	parent_department INTEGER, -- upper department ID
	name string -- department name
) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO department VALUES (0, NULL, 'ROOT')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO department VALUES (1, 0, 'A')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO department VALUES (2, 1, 'B')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO department VALUES (3, 2, 'C')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO department VALUES (4, 2, 'D')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO department VALUES (5, 0, 'E')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO department VALUES (6, 4, 'F')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO department VALUES (7, 5, 'G')
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE tree(
    id INTEGER,
    parent_id INTEGER
) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO tree
VALUES (1, NULL), (2, 1), (3,1), (4,2), (5,2), (6,2), (7,3), (8,3),
       (9,4), (10,4), (11,7), (12,7), (13,7), (14, 9), (15,11), (16,11)
-- !query schema
struct<>
-- !query output



-- !query
create table graph( f int, t int, label string ) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
insert into graph values
	(1, 2, 'arc 1 -> 2'),
	(1, 3, 'arc 1 -> 3'),
	(2, 3, 'arc 2 -> 3'),
	(1, 4, 'arc 1 -> 4'),
	(4, 5, 'arc 4 -> 5'),
	(5, 1, 'arc 5 -> 1')
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE y (a INTEGER) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO y SELECT EXPLODE(SEQUENCE(1, 10))
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE y
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE y (a INTEGER) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO y SELECT EXPLODE(SEQUENCE(1, 10))
-- !query schema
struct<>
-- !query output



-- !query
with cte(foo) as ( select 42 ) select * from ((select foo from cte)) q
-- !query schema
struct<foo:int>
-- !query output
42


-- !query
WITH outermost(x) AS (
  SELECT 1
  UNION (WITH innermost as (SELECT 2)
         SELECT * FROM innermost
         UNION SELECT 3)
)
SELECT * FROM outermost ORDER BY 1
-- !query schema
struct<x:int>
-- !query output
1
2
3


-- !query
WITH outermost(x) AS (
  SELECT 1
  UNION (WITH innermost as (SELECT 2)
         SELECT * FROM outermost  -- fail
         UNION SELECT * FROM innermost)
)
SELECT * FROM outermost ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Table or view not found: outermost; line 4 pos 23


-- !query
CREATE TABLE withz USING parquet AS SELECT i AS k, CAST(i || ' v' AS string) v FROM (SELECT EXPLODE(SEQUENCE(1, 16, 3)) i)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM withz ORDER BY k
-- !query schema
struct<k:int,v:string>
-- !query output
1	1 v
4	4 v
7	7 v
10	10 v
13	13 v
16	16 v


-- !query
DROP TABLE withz
-- !query schema
struct<>
-- !query output



-- !query
TRUNCATE TABLE y
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO y SELECT EXPLODE(SEQUENCE(1, 3))
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE yy (a INTEGER) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM y
-- !query schema
struct<a:int>
-- !query output
1
2
3


-- !query
SELECT * FROM yy
-- !query schema
struct<a:int>
-- !query output



-- !query
SELECT * FROM y
-- !query schema
struct<a:int>
-- !query output
1
2
3


-- !query
SELECT * FROM yy
-- !query schema
struct<a:int>
-- !query output



-- !query
CREATE TABLE parent ( id int, val string ) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO parent VALUES ( 1, 'p1' )
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM parent
-- !query schema
struct<id:int,val:string>
-- !query output
1	p1


-- !query
SELECT * FROM parent
-- !query schema
struct<id:int,val:string>
-- !query output
1	p1


-- !query
create table foo (with baz)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException

no viable alternative at input 'with'(line 1, pos 18)

== SQL ==
create table foo (with baz)
------------------^^^


-- !query
create table foo (with ordinality)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException

no viable alternative at input 'with'(line 1, pos 18)

== SQL ==
create table foo (with ordinality)
------------------^^^


-- !query
with ordinality as (select 1 as x) select * from ordinality
-- !query schema
struct<x:int>
-- !query output
1


-- !query
WITH test AS (SELECT 42) INSERT INTO test VALUES (1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
Table not found: test


-- !query
create table test (i int) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
with test as (select 42) insert into test select * from test
-- !query schema
struct<>
-- !query output



-- !query
select * from test
-- !query schema
struct<i:int>
-- !query output
42


-- !query
drop table test
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE department
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE tree
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE graph
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE y
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE yy
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE parent
-- !query schema
struct<>
-- !query output

